trigger:
- main
- develop

resources:
- repo: self

variables:
  buildConfiguration: 'release'
  vmImageName: 'ubuntu-latest'
  artifactName: 'BooksCatalog-deploy'

stages:
- stage: Build
  displayName: Build da Web App
  jobs:
  - job: Build
    displayName: Build da Web App em .NET
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UseDotNet@2
      displayName: Instalar .NET 6
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
    - script: dotnet --version
      displayName: Exibir vers√£o default do .NET
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: './BooksCatalog.sln'
        arguments: '--configuration $(buildConfiguration)'
      displayName: 'dotnet build $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: "./BooksCatalog.sln"
        arguments: '--configuration $(buildConfiguration)'
      displayName: 'dotnet test $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      displayName: Build + Publish gerando Artifact
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    - task: PublishPipelineArtifact@1
      displayName: Publish do Artifact
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: $(artifactWebApp)

- stage: Deployment
  displayName: Deployment da Web App
  dependsOn: Build
  jobs:
  - deployment: Deployment
    displayName: Deployment da Web App no Azure
    environment: PRD
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:          
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download do Artifact gerado no stage de Build
            inputs:
              buildType: 'current'
              artifactName: $(artifactWebApp)
              targetPath: '$(System.DefaultWorkingDirectory)/publish'
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'pipeline'
              appType: 'webAppLinux'
              appName:  'wilsonnetodev'
              package: '$(System.DefaultWorkingDirectory)/publish/*.zip'